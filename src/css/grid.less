@import "variables.less";

.hyaline {
    .grid {
        // all grids are flex-boxes by default
        display: flex;

        // grids default to row direction
        flex-direction: row;

        margin: @grid-margin;

        // Rules for children
        .cell {
            padding: @cell-pad;
            background: @demo-bg;
            color: @demo-c;
            box-shadow: 0 0 0 1px rgba(0,0,0,0.1) inset;

            margin: 0 (@cell-hgap / 2);

            // default flex values
            flex: 1 1 0;

            // this will generate classes of .span-# given the number of grid columns
            .generate-columns(@grid-columns);
        }

        // Grid Modifiers
        &.inline { display: inline-flex; }
        &.reverse { flex-direction: row-reverse; }

        &.wrapping {
            flex-wrap: wrap;
        }

        // nested grids don't have margins
        .grid {
            margin: 0;
        }

        // clear gutters on packed grid cells
        &.packed {
            .cell {
                margin-right: 0;
                margin-left: 0;
            }
        }

        // emphasize gutters on relaxed grid cells
        &.relaxed {
            .cell {
                margin: (@cell-vgap / 2) (@cell-hgap / 2);
            }
        }

        &.space-around {
            justify-content: space-around;
        }
        &.space-between {
            justify-content: space-between;
        }
    }
}

//
// functions
//

// generate classes of format /.span-#/ depending on the number of grid columns
.generate-columns(@n, @i: 1) when (@i =< @n) {
    &.span-@{i} {
        flex: 0 1 (@i * 100% / @n);
    }

    .generate-columns(@n, (@i + 1));
}